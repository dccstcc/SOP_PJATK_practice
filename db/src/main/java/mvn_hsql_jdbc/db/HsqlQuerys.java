package mvn_hsql_jdbc.db;

import java.sql.*;

public class HsqlQuerys {
	
		public HsqlQuerys(Connection conn, Statement stat) {
			createTables(conn, stat);
		}
	
		private void createTables(Connection conn, Statement stat) {
			create_t_sys_enums(conn, stat);
			create_t_sys_roles(conn, stat);
			create_t_sys_permissions(conn, stat);
			create_t_sys_users(conn, stat);
		}
		
		private void create_t_sys_enums(Connection conn, Statement stat) {
			
			String create_t_sys_enums = "CREATE TABLE t_sys_enums(id bigint GENERATED BY DEFAULT AS IDENTITY, roles_permissions varchar(30))";
			
			try {
			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			
			while (rs.next()) {
				if ("t_sys_enums".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists) {
				stat.executeUpdate(create_t_sys_enums);
			}
			else{
				System.out.println("Tabela t_sys_enums juz istnieje");
			}
			
			} catch (SQLException e) {
				System.out.println("Nie utworzono tabeli t_sys_enums");
				
				try {
					stat.close();
					conn.close();
				} catch (SQLException e2) {
					System.out.println("Bląd podczas zamykania zmiennej do zapytań i zmiennej połączenia");
				}

			}
		}
		
		private void create_t_sys_roles(Connection conn, Statement stat) {
			
			String create_t_sys_roles = "CREATE TABLE t_sys_roles(id bigint GENERATED BY DEFAULT AS IDENTITY, IDRolesPermissions integer)";
			
			try {
			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			
			while (rs.next()) {
				if ("t_sys_roles".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists) {
				stat.executeUpdate(create_t_sys_roles);
			}
			else{
				System.out.println("Tabela t_sys_roles juz istnieje");
			}
			
			} catch (SQLException e) {
				System.out.println("Nie utworzono tabeli t_sys_roles");
				
				try {
					stat.close();
					conn.close();
				} catch (SQLException e2) {
					System.out.println("Bląd podczas zamykania zmiennej do zapytań i zmiennej połączenia");
				}

			}
		}
		
		private void create_t_sys_permissions(Connection conn, Statement stat) {
			
			String create_t_sys_permissions = "CREATE TABLE t_sys_permissions(id bigint GENERATED BY DEFAULT AS IDENTITY, IDRolesPermissions integer)";
			
			try {
			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			
			while (rs.next()) {
				if ("t_sys_permissions".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists) {
				stat.executeUpdate(create_t_sys_permissions);
			}
			else{
				System.out.println("Tabela t_sys_permissions juz istnieje");
			}
			
			} catch (SQLException e) {
				System.out.println("Nie utworzono tabeli t_sys_permissions");
					
					try {
						stat.close();
						conn.close();
					} catch (SQLException e2) {
						System.out.println("Bląd podczas zamykania zmiennej do zapytań i zmiennej połączenia");
					}
			}
		}
		
		private void create_t_sys_users(Connection conn, Statement stat) {
			
			String create_t_sys_users = "CREATE TABLE t_sys_users(id bigint GENERATED BY DEFAULT AS IDENTITY, login varchar(30), password varchar(30), roleID int, permissionID int)";
			
			try {
			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			
			while (rs.next()) {
				if ("t_sys_users".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists) {
				stat.executeUpdate(create_t_sys_users);
			}
			else{
				System.out.println("Tabela t_sys_users juz istnieje");
			}
			
			} catch (SQLException e) {
				System.out.println("Nie utworzono tabeli t_sys_users");
					
					try {
						stat.close();
						conn.close();
					} catch (SQLException e2) {
						System.out.println("Bląd podczas zamykania zmiennej do zapytań i zmiennej połączenia");
					}
			}
		}
		
}
